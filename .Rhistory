library(ape)
set.seed(1234)
#Loading data
fasta.file.name <- "run_1177.fas"
snp.matrix <- load_fasta(fasta.file.name)
#Run hierBAPS.
#install.packages('rhierbaps')
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Loading data
fasta.file.name <- "run_1177.fas"
snp.matrix <- load_fasta(fasta.file.name)
#Run hierBAPS.
#install.packages('rhierbaps')
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Loading data
fasta.file.name <- "run_alignment_no_resis.fas"
snp.matrix <- load_fasta(fasta.file.name)
#We can also check how long hierBAPS takes to run on the test dataset of 515 samples and 744 SNPs.
#system.time(hierBAPS(snp.matrix, n.cores = 6, max.depth = 6, n.pops = 200, quiet = TRUE))
#To run hierBAPS with 2 levels and 20 initial clusters we run
hb.results <- hierBAPS(snp.matrix, n.cores = 4, max.depth = 2, n.pops = 60, quiet = TRUE)
head(hb.results$partition.df)
#Save
write.csv(hb.results$partition.df, "hierbaps_partition_1177_l4.csv", row.names = FALSE)
save_lml_logs(hb.results, "hierbaps_logML_1177_l4.txt")
#Run hierBAPS.
#install.packages('rhierbaps')
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Loading data
fasta.file.name <- "run_alignment_no_resis_1177.fas"
snp.matrix <- load_fasta(fasta.file.name)
#Run hierBAPS.
#install.packages('rhierbaps')
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Loading data
fasta.file.name <- "run_alignment_no_resis_1177.fas"
snp.matrix <- load_fasta(fasta.file.name)
#We can also check how long hierBAPS takes to run on the test dataset of 515 samples and 744 SNPs.
#system.time(hierBAP  S(snp.matrix, n.cores = 6, max.depth = 6, n.pops = 200, quiet = TRUE))
#To run hierBAPS with 2 levels and 20 initial clusters we run
hb.results <- hierBAPS(snp.matrix, n.cores = 8, max.depth = 8, quiet = TRUE)
head(hb.results$partition.df)
#Save
write.csv(hb.results$partition.df, "hierbaps_partition_1177_l4.csv", row.names = FALSE)
save_lml_logs(hb.results, "hierbaps_logML_1177_l4.txt")
#Run hierBAPS.
#install.packages('rhierbaps')
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Loading data
fasta.file.name <- "run_alignment_no_resis_1177.fas"
snp.matrix <- load_fasta(fasta.file.name)
#We can also check how long hierBAPS takes to run on the test dataset of 515 samples and 744 SNPs.
#system.time(hierBAP  S(snp.matrix, n.cores = 6, max.depth = 6, n.pops = 200, quiet = TRUE))
#To run hierBAPS with 2 levels and 20 initial clusters we run
hb.results <- hierBAPS(snp.matrix, n.cores = 6, max.depth = 8, quiet = TRUE)
head(hb.results$partition.df)
#Save
write.csv(hb.results$partition.df, "hierbaps_partition_1177_l4.csv", row.names = FALSE)
save_lml_logs(hb.results, "hierbaps_logML_1177_l4.txt")
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Plotting results
newick.file.name <- "run_alignment_no_resis_1177.fas.treefile"
iqtree_1177 <- phytools::read.newick(newick.file.name)
baps_1177 <- read.csv("hierbaps_partition_1177_l4.csv", sep = ",", header = T)
baps_1177$Isolate <- as.character(baps_1177$Isolate)
baps_1177$level.1 <- as.double(baps_1177$level.1)
baps_1177$level.2 <- as.double(baps_1177$level.2)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.4)))
gg_1177
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.5)))
gg_1177
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Plotting results
newick.file.name <- "run_alignment_no_resis_1177.fas.treefile"
iqtree_1177 <- phytools::read.newick(newick.file.name)
baps_1177 <- read.csv("hierbaps_partition_1177_l4.csv", sep = ",", header = T)
baps_1177$Isolate <- as.character(baps_1177$Isolate)
baps_1177$level.1 <- as.double(baps_1177$level.1)
baps_1177$level.2 <- as.double(baps_1177$level.2)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.5)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.4)))
gg_1177
gg_1177
gg <- ggtree(iqtree_1277, layout = "circular", branch.length = "none")
gg_1277 <- gg %<+% baps_1277
gg_1277 <- gg_1277 + geom_tippoint(aes(color = factor(level.2)))
gg_1277 <- gg_1277 + theme(legend.position = "right")
gg_1277 <- gg_1277 + geom_tiplab(aes(label = level.2), size = 1, offset = 1)
gg_1277
gg <- ggtree(iqtree_1177, layout = "circular", branch.length = "none")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.2)))
gg_1177 <- gg_1177 + theme(legend.position = "right")
gg_1177 <- gg_1177 + geom_tiplab(aes(label = level.2), size = 1, offset = 1)
gg_1177
plot_sub_cluster(hb.results, iqtree_1177, level = 1, sub.cluster = 1)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 1)
head(hb.results$partition.df)
hb.results$partition.df
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.5)))
gg_1177
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.1)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.2)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.4)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.4)))
gg_1177
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.5)))
gg_1177
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.6)))
gg_1177
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.7)))
gg_1177
View(gg_1177)
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.8)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.6)))
gg_1177
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.5)))
gg_1177
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.4)))
gg_1177
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.2)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.1)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.2)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.4)))
gg_1177
plot_sub_cluster(hb.results, iqtree_1177, level = 4, sub.cluster = 1)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 1)
View(gg_1177)
gg_1177[["data"]][["level.4"]]
gg <- ggtree(iqtree_1177, layout = "circular", branch.length = "none")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.2)))
gg_1177 <- gg_1177 + theme(legend.position = "right")
gg_1177 <- gg_1177 + geom_tiplab(aes(label = level.4), size = 1, offset = 1)
gg_1177
gg <- ggtree(iqtree_1177, layout = "circular", branch.length = "none")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.4)))
gg_1177 <- gg_1177 + theme(legend.position = "right")
gg_1177 <- gg_1177 + geom_tiplab(aes(label = level.4), size = 1, offset = 1)
gg_1177
View(gg_1177)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.4)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 41)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 40
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 40)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 40)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 168)
gg <- ggtree(iqtree_1177, layout = "circular", branch.length = "none")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177 <- gg_1177 + theme(legend.position = "right")
gg_1177 <- gg_1177 + geom_tiplab(aes(label = level.3), size = 1, offset = 1)
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 16)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 6)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 7)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 8)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 9)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 10)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 11)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 12)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 13)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 14)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 15)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 16)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 17)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 18)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 19)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 20)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 21)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 22)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 23)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 24)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 25)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 26)
lot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 27)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 27)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 28)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 29)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 30)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 31)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 32)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 33)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 34)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 35)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 36)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 37)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 38)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 39)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 49)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 52)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 56)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 55)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 57)
plot_sub_cluster(hb.results, iqtree_1177, level = 3, sub.cluster = 56)
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% baps_1177
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
View(baps_1177)
write.csv(baps_1177, file="basp_lvls.csv", row.names = F)
View(baps_1177)
head(hb.results$partition.df)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
#Run hierBAPS.
#install.packages('rhierbaps')
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
#Run hierBAPS.
#install.packages('rhierbaps')
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Plotting results
newick.file.name <- "run_alignment_no_resis_1177.fas.treefile"
iqtree_1177 <- phytools::read.newick(newick.file.name)
#baps_1177 <- read.csv("hierbaps_partition_1177_l4.csv", sep = ",", header = T)
#baps_1177$Isolate <- as.character(baps_1177$Isolate)
#baps_1177$level.1 <- as.double(baps_1177$level.1)
#baps_1177$level.2 <- as.double(baps_1177$level.2)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177
hb.results$partition.df
g <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 4`)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 3`)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 1`)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 8`)))
gg_1177
gg_1177
gg <- ggtree(iqtree_1177, layout = "circular", branch.length = "none")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(level.3)))
gg_1177 <- gg_1177 + theme(legend.position = "right")
gg_1177 <- gg_1177 + geom_tiplab(aes(label = level.3), size = 1, offset = 1)
gg_1177
gg <- ggtree(iqtree_1177, layout = "circular", branch.length = "none")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 3`)))
gg_1177 <- gg_1177 + theme(legend.position = "right")
gg_1177 <- gg_1177 + geom_tiplab(aes(label = `level 3`), size = 1, offset = 1)
gg_1177
write.tree(phy, gg_1177="gg_1177" tree.names = TRUE)
write.tree(gg_1177="gg_1177" tree.names = TRUE)
write.tree(gg_1177 ="gg_1177", tree.names = TRUE)
write.tree(gg_1177 ="gg_1177")
write.tree(gg_1177 ="1177")
write.tree(gg_1177 ="gg_1177")
write.tree(iqtree_1177 ="gg_1177")
write.tree(iqtree_1177 ="gyig")
write.tree(iqtree_1177)
write.tree(gg_1177)
write.tree(phy, gg_1177="gg_1177")
View(iqtree_1177)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 3`)))
gg_1177
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 1`)))
gg_1177
#Run hierBAPS.
#install.packages('rhierbaps')
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Plotting results
newick.file.name <- "run_alignment_no_resis_1177.fas.treefile"
iqtree_1177 <- phytools::read.newick(newick.file.name)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 1`)))
gg_1177
View(gg_1177)
head(hb.results$partition.df)
View(baps_1177)
View(snp.matrix)
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Plotting results
newick.file.name <- "run_alignment_no_resis_1177.fas.treefile"
iqtree_1177 <- phytools::read.newick(newick.file.name)
#baps_1177 <- read.csv("hierbaps_partition_1177_l4.csv", sep = ",", header = T)
#baps_1177$Isolate <- as.character(baps_1177$Isolate)
#baps_1177$level.1 <- as.double(baps_1177$level.1)
#baps_1177$level.2 <- as.double(baps_1177$level.2)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 2`)))
gg_1177
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Plotting results
newick.file.name <- "run_alignment_no_resis_1177.fas.treefile"
iqtree_1177 <- phytools::read.newick(newick.file.name)
#baps_1177 <- read.csv("hierbaps_partition_1177_l4.csv", sep = ",", header = T)
#baps_1177$Isolate <- as.character(baps_1177$Isolate)
#baps_1177$level.1 <- as.double(baps_1177$level.1)
#baps_1177$level.2 <- as.double(baps_1177$level.2)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 3`)))
gg_1177
library(rhierbaps)
library(ggtree)
library(phytools)
library(ape)
set.seed(1234)
#Plotting results
newick.file.name <- "run_alignment_no_resis_1177.fas.treefile"
iqtree_1177 <- phytools::read.newick(newick.file.name)
#baps_1177 <- read.csv("hierbaps_partition_1177_l4.csv", sep = ",", header = T)
#baps_1177$Isolate <- as.character(baps_1177$Isolate)
#baps_1177$level.1 <- as.double(baps_1177$level.1)
#baps_1177$level.2 <- as.double(baps_1177$level.2)
#A simple coloured tree allows us to see the top level cluster assignment from hierBAPS.
gg <- ggtree(iqtree_1177, layout = "circular")
gg_1177 <- gg %<+% hb.results$partition.df
gg_1177 <- gg_1177 + geom_tippoint(aes(color = factor(`level 2`)))
gg_1177
